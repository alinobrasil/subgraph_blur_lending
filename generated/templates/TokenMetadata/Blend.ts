// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BuyLocked extends ethereum.Event {
  get params(): BuyLocked__Params {
    return new BuyLocked__Params(this);
  }
}

export class BuyLocked__Params {
  _event: BuyLocked;

  constructor(event: BuyLocked) {
    this._event = event;
  }

  get lienId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get collection(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get seller(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class LoanOfferTaken extends ethereum.Event {
  get params(): LoanOfferTaken__Params {
    return new LoanOfferTaken__Params(this);
  }
}

export class LoanOfferTaken__Params {
  _event: LoanOfferTaken;

  constructor(event: LoanOfferTaken) {
    this._event = event;
  }

  get offerHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get lienId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get collection(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get lender(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get borrower(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get loanAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get rate(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get auctionDuration(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class NonceIncremented extends ethereum.Event {
  get params(): NonceIncremented__Params {
    return new NonceIncremented__Params(this);
  }
}

export class NonceIncremented__Params {
  _event: NonceIncremented;

  constructor(event: NonceIncremented) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newNonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OfferCancelled extends ethereum.Event {
  get params(): OfferCancelled__Params {
    return new OfferCancelled__Params(this);
  }
}

export class OfferCancelled__Params {
  _event: OfferCancelled;

  constructor(event: OfferCancelled) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get salt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferStarted extends ethereum.Event {
  get params(): OwnershipTransferStarted__Params {
    return new OwnershipTransferStarted__Params(this);
  }
}

export class OwnershipTransferStarted__Params {
  _event: OwnershipTransferStarted;

  constructor(event: OwnershipTransferStarted) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Refinance extends ethereum.Event {
  get params(): Refinance__Params {
    return new Refinance__Params(this);
  }
}

export class Refinance__Params {
  _event: Refinance;

  constructor(event: Refinance) {
    this._event = event;
  }

  get lienId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get collection(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newLender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get newAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get newRate(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get newAuctionDuration(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Repay extends ethereum.Event {
  get params(): Repay__Params {
    return new Repay__Params(this);
  }
}

export class Repay__Params {
  _event: Repay;

  constructor(event: Repay) {
    this._event = event;
  }

  get lienId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get collection(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Seize extends ethereum.Event {
  get params(): Seize__Params {
    return new Seize__Params(this);
  }
}

export class Seize__Params {
  _event: Seize;

  constructor(event: Seize) {
    this._event = event;
  }

  get lienId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get collection(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class StartAuction extends ethereum.Event {
  get params(): StartAuction__Params {
    return new StartAuction__Params(this);
  }
}

export class StartAuction__Params {
  _event: StartAuction;

  constructor(event: StartAuction) {
    this._event = event;
  }

  get lienId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get collection(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Blend__borrowInputOfferStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get totalAmount(): BigInt {
    return this[2].toBigInt();
  }

  get minAmount(): BigInt {
    return this[3].toBigInt();
  }

  get maxAmount(): BigInt {
    return this[4].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[7].toBigInt();
  }

  get rate(): BigInt {
    return this[8].toBigInt();
  }

  get oracle(): Address {
    return this[9].toAddress();
  }
}

export class Blend__buyToBorrowInputOfferStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get totalAmount(): BigInt {
    return this[2].toBigInt();
  }

  get minAmount(): BigInt {
    return this[3].toBigInt();
  }

  get maxAmount(): BigInt {
    return this[4].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[7].toBigInt();
  }

  get rate(): BigInt {
    return this[8].toBigInt();
  }

  get oracle(): Address {
    return this[9].toAddress();
  }
}

export class Blend__buyToBorrowInputExecutionStruct extends ethereum.Tuple {
  get makerOrder(): Blend__buyToBorrowInputExecutionMakerOrderStruct {
    return changetype<Blend__buyToBorrowInputExecutionMakerOrderStruct>(
      this[0].toTuple(),
    );
  }

  get extraSignature(): Bytes {
    return this[1].toBytes();
  }

  get blockNumber(): BigInt {
    return this[2].toBigInt();
  }
}

export class Blend__buyToBorrowInputExecutionMakerOrderStruct extends ethereum.Tuple {
  get order(): Blend__buyToBorrowInputExecutionMakerOrderOrderStruct {
    return changetype<Blend__buyToBorrowInputExecutionMakerOrderOrderStruct>(
      this[0].toTuple(),
    );
  }

  get v(): i32 {
    return this[1].toI32();
  }

  get r(): Bytes {
    return this[2].toBytes();
  }

  get s(): Bytes {
    return this[3].toBytes();
  }

  get extraSignature(): Bytes {
    return this[4].toBytes();
  }

  get signatureVersion(): i32 {
    return this[5].toI32();
  }

  get blockNumber(): BigInt {
    return this[6].toBigInt();
  }
}

export class Blend__buyToBorrowInputExecutionMakerOrderOrderStruct extends ethereum.Tuple {
  get trader(): Address {
    return this[0].toAddress();
  }

  get side(): i32 {
    return this[1].toI32();
  }

  get matchingPolicy(): Address {
    return this[2].toAddress();
  }

  get collection(): Address {
    return this[3].toAddress();
  }

  get tokenId(): BigInt {
    return this[4].toBigInt();
  }

  get amount(): BigInt {
    return this[5].toBigInt();
  }

  get paymentToken(): Address {
    return this[6].toAddress();
  }

  get price(): BigInt {
    return this[7].toBigInt();
  }

  get listingTime(): BigInt {
    return this[8].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[9].toBigInt();
  }

  get fees(): Array<Blend__buyToBorrowInputExecutionMakerOrderOrderFeesStruct> {
    return this[10].toTupleArray<Blend__buyToBorrowInputExecutionMakerOrderOrderFeesStruct>();
  }

  get salt(): BigInt {
    return this[11].toBigInt();
  }

  get extraParams(): Bytes {
    return this[12].toBytes();
  }
}

export class Blend__buyToBorrowInputExecutionMakerOrderOrderFeesStruct extends ethereum.Tuple {
  get rate(): i32 {
    return this[0].toI32();
  }

  get recipient(): Address {
    return this[1].toAddress();
  }
}

export class Blend__buyToBorrowLockedInputLienStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get borrower(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get rate(): BigInt {
    return this[6].toBigInt();
  }

  get auctionStartBlock(): BigInt {
    return this[7].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[8].toBigInt();
  }
}

export class Blend__buyToBorrowLockedInputSellInputStruct extends ethereum.Tuple {
  get offer(): Blend__buyToBorrowLockedInputSellInputOfferStruct {
    return changetype<Blend__buyToBorrowLockedInputSellInputOfferStruct>(
      this[0].toTuple(),
    );
  }

  get signature(): Bytes {
    return this[1].toBytes();
  }
}

export class Blend__buyToBorrowLockedInputSellInputOfferStruct extends ethereum.Tuple {
  get borrower(): Address {
    return this[0].toAddress();
  }

  get lienId(): BigInt {
    return this[1].toBigInt();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[3].toBigInt();
  }

  get salt(): BigInt {
    return this[4].toBigInt();
  }

  get oracle(): Address {
    return this[5].toAddress();
  }

  get fees(): Array<Blend__buyToBorrowLockedInputSellInputOfferFeesStruct> {
    return this[6].toTupleArray<Blend__buyToBorrowLockedInputSellInputOfferFeesStruct>();
  }
}

export class Blend__buyToBorrowLockedInputSellInputOfferFeesStruct extends ethereum.Tuple {
  get rate(): i32 {
    return this[0].toI32();
  }

  get recipient(): Address {
    return this[1].toAddress();
  }
}

export class Blend__buyToBorrowLockedInputLoanInputStruct extends ethereum.Tuple {
  get offer(): Blend__buyToBorrowLockedInputLoanInputOfferStruct {
    return changetype<Blend__buyToBorrowLockedInputLoanInputOfferStruct>(
      this[0].toTuple(),
    );
  }

  get signature(): Bytes {
    return this[1].toBytes();
  }
}

export class Blend__buyToBorrowLockedInputLoanInputOfferStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get totalAmount(): BigInt {
    return this[2].toBigInt();
  }

  get minAmount(): BigInt {
    return this[3].toBigInt();
  }

  get maxAmount(): BigInt {
    return this[4].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[7].toBigInt();
  }

  get rate(): BigInt {
    return this[8].toBigInt();
  }

  get oracle(): Address {
    return this[9].toAddress();
  }
}

export class Blend__buyToBorrowV2InputOfferStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get totalAmount(): BigInt {
    return this[2].toBigInt();
  }

  get minAmount(): BigInt {
    return this[3].toBigInt();
  }

  get maxAmount(): BigInt {
    return this[4].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[7].toBigInt();
  }

  get rate(): BigInt {
    return this[8].toBigInt();
  }

  get oracle(): Address {
    return this[9].toAddress();
  }
}

export class Blend__buyToBorrowV2InputExecutionStruct extends ethereum.Tuple {
  get order(): Blend__buyToBorrowV2InputExecutionOrderStruct {
    return changetype<Blend__buyToBorrowV2InputExecutionOrderStruct>(
      this[0].toTuple(),
    );
  }

  get listing(): Blend__buyToBorrowV2InputExecutionListingStruct {
    return changetype<Blend__buyToBorrowV2InputExecutionListingStruct>(
      this[1].toTuple(),
    );
  }

  get proof(): Array<Bytes> {
    return this[2].toBytesArray();
  }

  get signature(): Bytes {
    return this[3].toBytes();
  }

  get oracleSignature(): Bytes {
    return this[4].toBytes();
  }
}

export class Blend__buyToBorrowV2InputExecutionOrderStruct extends ethereum.Tuple {
  get trader(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get listingsRoot(): Bytes {
    return this[2].toBytes();
  }

  get numberOfListings(): BigInt {
    return this[3].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[4].toBigInt();
  }

  get assetType(): i32 {
    return this[5].toI32();
  }

  get makerFee(): Blend__buyToBorrowV2InputExecutionOrderMakerFeeStruct {
    return changetype<Blend__buyToBorrowV2InputExecutionOrderMakerFeeStruct>(
      this[6].toTuple(),
    );
  }

  get salt(): BigInt {
    return this[7].toBigInt();
  }
}

export class Blend__buyToBorrowV2InputExecutionOrderMakerFeeStruct extends ethereum.Tuple {
  get recipient(): Address {
    return this[0].toAddress();
  }

  get rate(): i32 {
    return this[1].toI32();
  }
}

export class Blend__buyToBorrowV2InputExecutionListingStruct extends ethereum.Tuple {
  get index(): BigInt {
    return this[0].toBigInt();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }
}

export class Blend__getOfferHashInputOfferStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get totalAmount(): BigInt {
    return this[2].toBigInt();
  }

  get minAmount(): BigInt {
    return this[3].toBigInt();
  }

  get maxAmount(): BigInt {
    return this[4].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[7].toBigInt();
  }

  get rate(): BigInt {
    return this[8].toBigInt();
  }

  get oracle(): Address {
    return this[9].toAddress();
  }
}

export class Blend__getSellOfferHashInputOfferStruct extends ethereum.Tuple {
  get borrower(): Address {
    return this[0].toAddress();
  }

  get lienId(): BigInt {
    return this[1].toBigInt();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[3].toBigInt();
  }

  get salt(): BigInt {
    return this[4].toBigInt();
  }

  get oracle(): Address {
    return this[5].toAddress();
  }

  get fees(): Array<Blend__getSellOfferHashInputOfferFeesStruct> {
    return this[6].toTupleArray<Blend__getSellOfferHashInputOfferFeesStruct>();
  }
}

export class Blend__getSellOfferHashInputOfferFeesStruct extends ethereum.Tuple {
  get rate(): i32 {
    return this[0].toI32();
  }

  get recipient(): Address {
    return this[1].toAddress();
  }
}

export class Blend__informationResult {
  value0: string;
  value1: Bytes;

  constructor(value0: string, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    return map;
  }

  getVersion(): string {
    return this.value0;
  }

  getDomainSeparator(): Bytes {
    return this.value1;
  }
}

export class Blend extends ethereum.SmartContract {
  static bind(address: Address): Blend {
    return new Blend("Blend", address);
  }

  amountTaken(param0: Bytes): BigInt {
    let result = super.call("amountTaken", "amountTaken(bytes32):(uint256)", [
      ethereum.Value.fromFixedBytes(param0),
    ]);

    return result[0].toBigInt();
  }

  try_amountTaken(param0: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "amountTaken",
      "amountTaken(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  blockRange(): BigInt {
    let result = super.call("blockRange", "blockRange():(uint256)", []);

    return result[0].toBigInt();
  }

  try_blockRange(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("blockRange", "blockRange():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  borrow(
    offer: Blend__borrowInputOfferStruct,
    signature: Bytes,
    loanAmount: BigInt,
    collateralTokenId: BigInt,
  ): BigInt {
    let result = super.call(
      "borrow",
      "borrow((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address),bytes,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromTuple(offer),
        ethereum.Value.fromBytes(signature),
        ethereum.Value.fromUnsignedBigInt(loanAmount),
        ethereum.Value.fromUnsignedBigInt(collateralTokenId),
      ],
    );

    return result[0].toBigInt();
  }

  try_borrow(
    offer: Blend__borrowInputOfferStruct,
    signature: Bytes,
    loanAmount: BigInt,
    collateralTokenId: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "borrow",
      "borrow((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address),bytes,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromTuple(offer),
        ethereum.Value.fromBytes(signature),
        ethereum.Value.fromUnsignedBigInt(loanAmount),
        ethereum.Value.fromUnsignedBigInt(collateralTokenId),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  buyToBorrow(
    offer: Blend__buyToBorrowInputOfferStruct,
    signature: Bytes,
    loanAmount: BigInt,
    execution: Blend__buyToBorrowInputExecutionStruct,
  ): BigInt {
    let result = super.call(
      "buyToBorrow",
      "buyToBorrow((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address),bytes,uint256,(((address,uint8,address,address,uint256,uint256,address,uint256,uint256,uint256,(uint16,address)[],uint256,bytes),uint8,bytes32,bytes32,bytes,uint8,uint256),bytes,uint256)):(uint256)",
      [
        ethereum.Value.fromTuple(offer),
        ethereum.Value.fromBytes(signature),
        ethereum.Value.fromUnsignedBigInt(loanAmount),
        ethereum.Value.fromTuple(execution),
      ],
    );

    return result[0].toBigInt();
  }

  try_buyToBorrow(
    offer: Blend__buyToBorrowInputOfferStruct,
    signature: Bytes,
    loanAmount: BigInt,
    execution: Blend__buyToBorrowInputExecutionStruct,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "buyToBorrow",
      "buyToBorrow((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address),bytes,uint256,(((address,uint8,address,address,uint256,uint256,address,uint256,uint256,uint256,(uint16,address)[],uint256,bytes),uint8,bytes32,bytes32,bytes,uint8,uint256),bytes,uint256)):(uint256)",
      [
        ethereum.Value.fromTuple(offer),
        ethereum.Value.fromBytes(signature),
        ethereum.Value.fromUnsignedBigInt(loanAmount),
        ethereum.Value.fromTuple(execution),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  buyToBorrowLocked(
    lien: Blend__buyToBorrowLockedInputLienStruct,
    sellInput: Blend__buyToBorrowLockedInputSellInputStruct,
    loanInput: Blend__buyToBorrowLockedInputLoanInputStruct,
    loanAmount: BigInt,
  ): BigInt {
    let result = super.call(
      "buyToBorrowLocked",
      "buyToBorrowLocked((address,address,address,uint256,uint256,uint256,uint256,uint256,uint256),((address,uint256,uint256,uint256,uint256,address,(uint16,address)[]),bytes),((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address),bytes),uint256):(uint256)",
      [
        ethereum.Value.fromTuple(lien),
        ethereum.Value.fromTuple(sellInput),
        ethereum.Value.fromTuple(loanInput),
        ethereum.Value.fromUnsignedBigInt(loanAmount),
      ],
    );

    return result[0].toBigInt();
  }

  try_buyToBorrowLocked(
    lien: Blend__buyToBorrowLockedInputLienStruct,
    sellInput: Blend__buyToBorrowLockedInputSellInputStruct,
    loanInput: Blend__buyToBorrowLockedInputLoanInputStruct,
    loanAmount: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "buyToBorrowLocked",
      "buyToBorrowLocked((address,address,address,uint256,uint256,uint256,uint256,uint256,uint256),((address,uint256,uint256,uint256,uint256,address,(uint16,address)[]),bytes),((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address),bytes),uint256):(uint256)",
      [
        ethereum.Value.fromTuple(lien),
        ethereum.Value.fromTuple(sellInput),
        ethereum.Value.fromTuple(loanInput),
        ethereum.Value.fromUnsignedBigInt(loanAmount),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  buyToBorrowV2(
    offer: Blend__buyToBorrowV2InputOfferStruct,
    signature: Bytes,
    loanAmount: BigInt,
    execution: Blend__buyToBorrowV2InputExecutionStruct,
  ): BigInt {
    let result = super.call(
      "buyToBorrowV2",
      "buyToBorrowV2((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address),bytes,uint256,((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),(uint256,uint256,uint256,uint256),bytes32[],bytes,bytes)):(uint256)",
      [
        ethereum.Value.fromTuple(offer),
        ethereum.Value.fromBytes(signature),
        ethereum.Value.fromUnsignedBigInt(loanAmount),
        ethereum.Value.fromTuple(execution),
      ],
    );

    return result[0].toBigInt();
  }

  try_buyToBorrowV2(
    offer: Blend__buyToBorrowV2InputOfferStruct,
    signature: Bytes,
    loanAmount: BigInt,
    execution: Blend__buyToBorrowV2InputExecutionStruct,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "buyToBorrowV2",
      "buyToBorrowV2((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address),bytes,uint256,((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),(uint256,uint256,uint256,uint256),bytes32[],bytes,bytes)):(uint256)",
      [
        ethereum.Value.fromTuple(offer),
        ethereum.Value.fromBytes(signature),
        ethereum.Value.fromUnsignedBigInt(loanAmount),
        ethereum.Value.fromTuple(execution),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  cancelledOrFulfilled(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "cancelledOrFulfilled",
      "cancelledOrFulfilled(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return result[0].toBigInt();
  }

  try_cancelledOrFulfilled(
    param0: Address,
    param1: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "cancelledOrFulfilled",
      "cancelledOrFulfilled(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOfferHash(offer: Blend__getOfferHashInputOfferStruct): Bytes {
    let result = super.call(
      "getOfferHash",
      "getOfferHash((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)):(bytes32)",
      [ethereum.Value.fromTuple(offer)],
    );

    return result[0].toBytes();
  }

  try_getOfferHash(
    offer: Blend__getOfferHashInputOfferStruct,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getOfferHash",
      "getOfferHash((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)):(bytes32)",
      [ethereum.Value.fromTuple(offer)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getOracleOfferHash(hash: Bytes, blockNumber: BigInt): Bytes {
    let result = super.call(
      "getOracleOfferHash",
      "getOracleOfferHash(bytes32,uint256):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(hash),
        ethereum.Value.fromUnsignedBigInt(blockNumber),
      ],
    );

    return result[0].toBytes();
  }

  try_getOracleOfferHash(
    hash: Bytes,
    blockNumber: BigInt,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getOracleOfferHash",
      "getOracleOfferHash(bytes32,uint256):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(hash),
        ethereum.Value.fromUnsignedBigInt(blockNumber),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getSellOfferHash(offer: Blend__getSellOfferHashInputOfferStruct): Bytes {
    let result = super.call(
      "getSellOfferHash",
      "getSellOfferHash((address,uint256,uint256,uint256,uint256,address,(uint16,address)[])):(bytes32)",
      [ethereum.Value.fromTuple(offer)],
    );

    return result[0].toBytes();
  }

  try_getSellOfferHash(
    offer: Blend__getSellOfferHashInputOfferStruct,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getSellOfferHash",
      "getSellOfferHash((address,uint256,uint256,uint256,uint256,address,(uint16,address)[])):(bytes32)",
      [ethereum.Value.fromTuple(offer)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  information(): Blend__informationResult {
    let result = super.call(
      "information",
      "information():(string,bytes32)",
      [],
    );

    return new Blend__informationResult(
      result[0].toString(),
      result[1].toBytes(),
    );
  }

  try_information(): ethereum.CallResult<Blend__informationResult> {
    let result = super.tryCall(
      "information",
      "information():(string,bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Blend__informationResult(value[0].toString(), value[1].toBytes()),
    );
  }

  liens(param0: BigInt): Bytes {
    let result = super.call("liens", "liens(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return result[0].toBytes();
  }

  try_liens(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall("liens", "liens(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  nonces(param0: Address): BigInt {
    let result = super.call("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBigInt();
  }

  try_nonces(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  onERC721Received(
    operator: Address,
    from: Address,
    tokenId: BigInt,
    data: Bytes,
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromBytes(data),
      ],
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    operator: Address,
    from: Address,
    tokenId: BigInt,
    data: Bytes,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromBytes(data),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  oracles(param0: Address): BigInt {
    let result = super.call("oracles", "oracles(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBigInt();
  }

  try_oracles(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("oracles", "oracles(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingOwner(): Address {
    let result = super.call("pendingOwner", "pendingOwner():(address)", []);

    return result[0].toAddress();
  }

  try_pendingOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("pendingOwner", "pendingOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get exchange(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get exchangeV2(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get sellMatchingPolicy(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get bidMatchingPolicy(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get delegate(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get delegateV2(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class BorrowCall extends ethereum.Call {
  get inputs(): BorrowCall__Inputs {
    return new BorrowCall__Inputs(this);
  }

  get outputs(): BorrowCall__Outputs {
    return new BorrowCall__Outputs(this);
  }
}

export class BorrowCall__Inputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }

  get offer(): BorrowCallOfferStruct {
    return changetype<BorrowCallOfferStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get signature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get loanAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get collateralTokenId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class BorrowCall__Outputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }

  get lienId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class BorrowCallOfferStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get totalAmount(): BigInt {
    return this[2].toBigInt();
  }

  get minAmount(): BigInt {
    return this[3].toBigInt();
  }

  get maxAmount(): BigInt {
    return this[4].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[7].toBigInt();
  }

  get rate(): BigInt {
    return this[8].toBigInt();
  }

  get oracle(): Address {
    return this[9].toAddress();
  }
}

export class BorrowerRefinanceCall extends ethereum.Call {
  get inputs(): BorrowerRefinanceCall__Inputs {
    return new BorrowerRefinanceCall__Inputs(this);
  }

  get outputs(): BorrowerRefinanceCall__Outputs {
    return new BorrowerRefinanceCall__Outputs(this);
  }
}

export class BorrowerRefinanceCall__Inputs {
  _call: BorrowerRefinanceCall;

  constructor(call: BorrowerRefinanceCall) {
    this._call = call;
  }

  get lien(): BorrowerRefinanceCallLienStruct {
    return changetype<BorrowerRefinanceCallLienStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get lienId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get loanAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get offer(): BorrowerRefinanceCallOfferStruct {
    return changetype<BorrowerRefinanceCallOfferStruct>(
      this._call.inputValues[3].value.toTuple(),
    );
  }

  get signature(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class BorrowerRefinanceCall__Outputs {
  _call: BorrowerRefinanceCall;

  constructor(call: BorrowerRefinanceCall) {
    this._call = call;
  }
}

export class BorrowerRefinanceCallLienStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get borrower(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get rate(): BigInt {
    return this[6].toBigInt();
  }

  get auctionStartBlock(): BigInt {
    return this[7].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[8].toBigInt();
  }
}

export class BorrowerRefinanceCallOfferStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get totalAmount(): BigInt {
    return this[2].toBigInt();
  }

  get minAmount(): BigInt {
    return this[3].toBigInt();
  }

  get maxAmount(): BigInt {
    return this[4].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[7].toBigInt();
  }

  get rate(): BigInt {
    return this[8].toBigInt();
  }

  get oracle(): Address {
    return this[9].toAddress();
  }
}

export class BuyLockedCall extends ethereum.Call {
  get inputs(): BuyLockedCall__Inputs {
    return new BuyLockedCall__Inputs(this);
  }

  get outputs(): BuyLockedCall__Outputs {
    return new BuyLockedCall__Outputs(this);
  }
}

export class BuyLockedCall__Inputs {
  _call: BuyLockedCall;

  constructor(call: BuyLockedCall) {
    this._call = call;
  }

  get lien(): BuyLockedCallLienStruct {
    return changetype<BuyLockedCallLienStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get offer(): BuyLockedCallOfferStruct {
    return changetype<BuyLockedCallOfferStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }

  get signature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class BuyLockedCall__Outputs {
  _call: BuyLockedCall;

  constructor(call: BuyLockedCall) {
    this._call = call;
  }
}

export class BuyLockedCallLienStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get borrower(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get rate(): BigInt {
    return this[6].toBigInt();
  }

  get auctionStartBlock(): BigInt {
    return this[7].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[8].toBigInt();
  }
}

export class BuyLockedCallOfferStruct extends ethereum.Tuple {
  get borrower(): Address {
    return this[0].toAddress();
  }

  get lienId(): BigInt {
    return this[1].toBigInt();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[3].toBigInt();
  }

  get salt(): BigInt {
    return this[4].toBigInt();
  }

  get oracle(): Address {
    return this[5].toAddress();
  }

  get fees(): Array<BuyLockedCallOfferFeesStruct> {
    return this[6].toTupleArray<BuyLockedCallOfferFeesStruct>();
  }
}

export class BuyLockedCallOfferFeesStruct extends ethereum.Tuple {
  get rate(): i32 {
    return this[0].toI32();
  }

  get recipient(): Address {
    return this[1].toAddress();
  }
}

export class BuyLockedETHCall extends ethereum.Call {
  get inputs(): BuyLockedETHCall__Inputs {
    return new BuyLockedETHCall__Inputs(this);
  }

  get outputs(): BuyLockedETHCall__Outputs {
    return new BuyLockedETHCall__Outputs(this);
  }
}

export class BuyLockedETHCall__Inputs {
  _call: BuyLockedETHCall;

  constructor(call: BuyLockedETHCall) {
    this._call = call;
  }

  get lien(): BuyLockedETHCallLienStruct {
    return changetype<BuyLockedETHCallLienStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get offer(): BuyLockedETHCallOfferStruct {
    return changetype<BuyLockedETHCallOfferStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }

  get signature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class BuyLockedETHCall__Outputs {
  _call: BuyLockedETHCall;

  constructor(call: BuyLockedETHCall) {
    this._call = call;
  }
}

export class BuyLockedETHCallLienStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get borrower(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get rate(): BigInt {
    return this[6].toBigInt();
  }

  get auctionStartBlock(): BigInt {
    return this[7].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[8].toBigInt();
  }
}

export class BuyLockedETHCallOfferStruct extends ethereum.Tuple {
  get borrower(): Address {
    return this[0].toAddress();
  }

  get lienId(): BigInt {
    return this[1].toBigInt();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[3].toBigInt();
  }

  get salt(): BigInt {
    return this[4].toBigInt();
  }

  get oracle(): Address {
    return this[5].toAddress();
  }

  get fees(): Array<BuyLockedETHCallOfferFeesStruct> {
    return this[6].toTupleArray<BuyLockedETHCallOfferFeesStruct>();
  }
}

export class BuyLockedETHCallOfferFeesStruct extends ethereum.Tuple {
  get rate(): i32 {
    return this[0].toI32();
  }

  get recipient(): Address {
    return this[1].toAddress();
  }
}

export class BuyToBorrowCall extends ethereum.Call {
  get inputs(): BuyToBorrowCall__Inputs {
    return new BuyToBorrowCall__Inputs(this);
  }

  get outputs(): BuyToBorrowCall__Outputs {
    return new BuyToBorrowCall__Outputs(this);
  }
}

export class BuyToBorrowCall__Inputs {
  _call: BuyToBorrowCall;

  constructor(call: BuyToBorrowCall) {
    this._call = call;
  }

  get offer(): BuyToBorrowCallOfferStruct {
    return changetype<BuyToBorrowCallOfferStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get signature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get loanAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get execution(): BuyToBorrowCallExecutionStruct {
    return changetype<BuyToBorrowCallExecutionStruct>(
      this._call.inputValues[3].value.toTuple(),
    );
  }
}

export class BuyToBorrowCall__Outputs {
  _call: BuyToBorrowCall;

  constructor(call: BuyToBorrowCall) {
    this._call = call;
  }

  get lienId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class BuyToBorrowCallOfferStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get totalAmount(): BigInt {
    return this[2].toBigInt();
  }

  get minAmount(): BigInt {
    return this[3].toBigInt();
  }

  get maxAmount(): BigInt {
    return this[4].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[7].toBigInt();
  }

  get rate(): BigInt {
    return this[8].toBigInt();
  }

  get oracle(): Address {
    return this[9].toAddress();
  }
}

export class BuyToBorrowCallExecutionStruct extends ethereum.Tuple {
  get makerOrder(): BuyToBorrowCallExecutionMakerOrderStruct {
    return changetype<BuyToBorrowCallExecutionMakerOrderStruct>(
      this[0].toTuple(),
    );
  }

  get extraSignature(): Bytes {
    return this[1].toBytes();
  }

  get blockNumber(): BigInt {
    return this[2].toBigInt();
  }
}

export class BuyToBorrowCallExecutionMakerOrderStruct extends ethereum.Tuple {
  get order(): BuyToBorrowCallExecutionMakerOrderOrderStruct {
    return changetype<BuyToBorrowCallExecutionMakerOrderOrderStruct>(
      this[0].toTuple(),
    );
  }

  get v(): i32 {
    return this[1].toI32();
  }

  get r(): Bytes {
    return this[2].toBytes();
  }

  get s(): Bytes {
    return this[3].toBytes();
  }

  get extraSignature(): Bytes {
    return this[4].toBytes();
  }

  get signatureVersion(): i32 {
    return this[5].toI32();
  }

  get blockNumber(): BigInt {
    return this[6].toBigInt();
  }
}

export class BuyToBorrowCallExecutionMakerOrderOrderStruct extends ethereum.Tuple {
  get trader(): Address {
    return this[0].toAddress();
  }

  get side(): i32 {
    return this[1].toI32();
  }

  get matchingPolicy(): Address {
    return this[2].toAddress();
  }

  get collection(): Address {
    return this[3].toAddress();
  }

  get tokenId(): BigInt {
    return this[4].toBigInt();
  }

  get amount(): BigInt {
    return this[5].toBigInt();
  }

  get paymentToken(): Address {
    return this[6].toAddress();
  }

  get price(): BigInt {
    return this[7].toBigInt();
  }

  get listingTime(): BigInt {
    return this[8].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[9].toBigInt();
  }

  get fees(): Array<BuyToBorrowCallExecutionMakerOrderOrderFeesStruct> {
    return this[10].toTupleArray<BuyToBorrowCallExecutionMakerOrderOrderFeesStruct>();
  }

  get salt(): BigInt {
    return this[11].toBigInt();
  }

  get extraParams(): Bytes {
    return this[12].toBytes();
  }
}

export class BuyToBorrowCallExecutionMakerOrderOrderFeesStruct extends ethereum.Tuple {
  get rate(): i32 {
    return this[0].toI32();
  }

  get recipient(): Address {
    return this[1].toAddress();
  }
}

export class BuyToBorrowETHCall extends ethereum.Call {
  get inputs(): BuyToBorrowETHCall__Inputs {
    return new BuyToBorrowETHCall__Inputs(this);
  }

  get outputs(): BuyToBorrowETHCall__Outputs {
    return new BuyToBorrowETHCall__Outputs(this);
  }
}

export class BuyToBorrowETHCall__Inputs {
  _call: BuyToBorrowETHCall;

  constructor(call: BuyToBorrowETHCall) {
    this._call = call;
  }

  get offer(): BuyToBorrowETHCallOfferStruct {
    return changetype<BuyToBorrowETHCallOfferStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get signature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get loanAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get execution(): BuyToBorrowETHCallExecutionStruct {
    return changetype<BuyToBorrowETHCallExecutionStruct>(
      this._call.inputValues[3].value.toTuple(),
    );
  }
}

export class BuyToBorrowETHCall__Outputs {
  _call: BuyToBorrowETHCall;

  constructor(call: BuyToBorrowETHCall) {
    this._call = call;
  }

  get lienId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class BuyToBorrowETHCallOfferStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get totalAmount(): BigInt {
    return this[2].toBigInt();
  }

  get minAmount(): BigInt {
    return this[3].toBigInt();
  }

  get maxAmount(): BigInt {
    return this[4].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[7].toBigInt();
  }

  get rate(): BigInt {
    return this[8].toBigInt();
  }

  get oracle(): Address {
    return this[9].toAddress();
  }
}

export class BuyToBorrowETHCallExecutionStruct extends ethereum.Tuple {
  get makerOrder(): BuyToBorrowETHCallExecutionMakerOrderStruct {
    return changetype<BuyToBorrowETHCallExecutionMakerOrderStruct>(
      this[0].toTuple(),
    );
  }

  get extraSignature(): Bytes {
    return this[1].toBytes();
  }

  get blockNumber(): BigInt {
    return this[2].toBigInt();
  }
}

export class BuyToBorrowETHCallExecutionMakerOrderStruct extends ethereum.Tuple {
  get order(): BuyToBorrowETHCallExecutionMakerOrderOrderStruct {
    return changetype<BuyToBorrowETHCallExecutionMakerOrderOrderStruct>(
      this[0].toTuple(),
    );
  }

  get v(): i32 {
    return this[1].toI32();
  }

  get r(): Bytes {
    return this[2].toBytes();
  }

  get s(): Bytes {
    return this[3].toBytes();
  }

  get extraSignature(): Bytes {
    return this[4].toBytes();
  }

  get signatureVersion(): i32 {
    return this[5].toI32();
  }

  get blockNumber(): BigInt {
    return this[6].toBigInt();
  }
}

export class BuyToBorrowETHCallExecutionMakerOrderOrderStruct extends ethereum.Tuple {
  get trader(): Address {
    return this[0].toAddress();
  }

  get side(): i32 {
    return this[1].toI32();
  }

  get matchingPolicy(): Address {
    return this[2].toAddress();
  }

  get collection(): Address {
    return this[3].toAddress();
  }

  get tokenId(): BigInt {
    return this[4].toBigInt();
  }

  get amount(): BigInt {
    return this[5].toBigInt();
  }

  get paymentToken(): Address {
    return this[6].toAddress();
  }

  get price(): BigInt {
    return this[7].toBigInt();
  }

  get listingTime(): BigInt {
    return this[8].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[9].toBigInt();
  }

  get fees(): Array<BuyToBorrowETHCallExecutionMakerOrderOrderFeesStruct> {
    return this[10].toTupleArray<BuyToBorrowETHCallExecutionMakerOrderOrderFeesStruct>();
  }

  get salt(): BigInt {
    return this[11].toBigInt();
  }

  get extraParams(): Bytes {
    return this[12].toBytes();
  }
}

export class BuyToBorrowETHCallExecutionMakerOrderOrderFeesStruct extends ethereum.Tuple {
  get rate(): i32 {
    return this[0].toI32();
  }

  get recipient(): Address {
    return this[1].toAddress();
  }
}

export class BuyToBorrowLockedCall extends ethereum.Call {
  get inputs(): BuyToBorrowLockedCall__Inputs {
    return new BuyToBorrowLockedCall__Inputs(this);
  }

  get outputs(): BuyToBorrowLockedCall__Outputs {
    return new BuyToBorrowLockedCall__Outputs(this);
  }
}

export class BuyToBorrowLockedCall__Inputs {
  _call: BuyToBorrowLockedCall;

  constructor(call: BuyToBorrowLockedCall) {
    this._call = call;
  }

  get lien(): BuyToBorrowLockedCallLienStruct {
    return changetype<BuyToBorrowLockedCallLienStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get sellInput(): BuyToBorrowLockedCallSellInputStruct {
    return changetype<BuyToBorrowLockedCallSellInputStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }

  get loanInput(): BuyToBorrowLockedCallLoanInputStruct {
    return changetype<BuyToBorrowLockedCallLoanInputStruct>(
      this._call.inputValues[2].value.toTuple(),
    );
  }

  get loanAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class BuyToBorrowLockedCall__Outputs {
  _call: BuyToBorrowLockedCall;

  constructor(call: BuyToBorrowLockedCall) {
    this._call = call;
  }

  get lienId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class BuyToBorrowLockedCallLienStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get borrower(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get rate(): BigInt {
    return this[6].toBigInt();
  }

  get auctionStartBlock(): BigInt {
    return this[7].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[8].toBigInt();
  }
}

export class BuyToBorrowLockedCallSellInputStruct extends ethereum.Tuple {
  get offer(): BuyToBorrowLockedCallSellInputOfferStruct {
    return changetype<BuyToBorrowLockedCallSellInputOfferStruct>(
      this[0].toTuple(),
    );
  }

  get signature(): Bytes {
    return this[1].toBytes();
  }
}

export class BuyToBorrowLockedCallSellInputOfferStruct extends ethereum.Tuple {
  get borrower(): Address {
    return this[0].toAddress();
  }

  get lienId(): BigInt {
    return this[1].toBigInt();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[3].toBigInt();
  }

  get salt(): BigInt {
    return this[4].toBigInt();
  }

  get oracle(): Address {
    return this[5].toAddress();
  }

  get fees(): Array<BuyToBorrowLockedCallSellInputOfferFeesStruct> {
    return this[6].toTupleArray<BuyToBorrowLockedCallSellInputOfferFeesStruct>();
  }
}

export class BuyToBorrowLockedCallSellInputOfferFeesStruct extends ethereum.Tuple {
  get rate(): i32 {
    return this[0].toI32();
  }

  get recipient(): Address {
    return this[1].toAddress();
  }
}

export class BuyToBorrowLockedCallLoanInputStruct extends ethereum.Tuple {
  get offer(): BuyToBorrowLockedCallLoanInputOfferStruct {
    return changetype<BuyToBorrowLockedCallLoanInputOfferStruct>(
      this[0].toTuple(),
    );
  }

  get signature(): Bytes {
    return this[1].toBytes();
  }
}

export class BuyToBorrowLockedCallLoanInputOfferStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get totalAmount(): BigInt {
    return this[2].toBigInt();
  }

  get minAmount(): BigInt {
    return this[3].toBigInt();
  }

  get maxAmount(): BigInt {
    return this[4].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[7].toBigInt();
  }

  get rate(): BigInt {
    return this[8].toBigInt();
  }

  get oracle(): Address {
    return this[9].toAddress();
  }
}

export class BuyToBorrowLockedETHCall extends ethereum.Call {
  get inputs(): BuyToBorrowLockedETHCall__Inputs {
    return new BuyToBorrowLockedETHCall__Inputs(this);
  }

  get outputs(): BuyToBorrowLockedETHCall__Outputs {
    return new BuyToBorrowLockedETHCall__Outputs(this);
  }
}

export class BuyToBorrowLockedETHCall__Inputs {
  _call: BuyToBorrowLockedETHCall;

  constructor(call: BuyToBorrowLockedETHCall) {
    this._call = call;
  }

  get lien(): BuyToBorrowLockedETHCallLienStruct {
    return changetype<BuyToBorrowLockedETHCallLienStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get sellInput(): BuyToBorrowLockedETHCallSellInputStruct {
    return changetype<BuyToBorrowLockedETHCallSellInputStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }

  get loanInput(): BuyToBorrowLockedETHCallLoanInputStruct {
    return changetype<BuyToBorrowLockedETHCallLoanInputStruct>(
      this._call.inputValues[2].value.toTuple(),
    );
  }

  get loanAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class BuyToBorrowLockedETHCall__Outputs {
  _call: BuyToBorrowLockedETHCall;

  constructor(call: BuyToBorrowLockedETHCall) {
    this._call = call;
  }

  get lienId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class BuyToBorrowLockedETHCallLienStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get borrower(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get rate(): BigInt {
    return this[6].toBigInt();
  }

  get auctionStartBlock(): BigInt {
    return this[7].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[8].toBigInt();
  }
}

export class BuyToBorrowLockedETHCallSellInputStruct extends ethereum.Tuple {
  get offer(): BuyToBorrowLockedETHCallSellInputOfferStruct {
    return changetype<BuyToBorrowLockedETHCallSellInputOfferStruct>(
      this[0].toTuple(),
    );
  }

  get signature(): Bytes {
    return this[1].toBytes();
  }
}

export class BuyToBorrowLockedETHCallSellInputOfferStruct extends ethereum.Tuple {
  get borrower(): Address {
    return this[0].toAddress();
  }

  get lienId(): BigInt {
    return this[1].toBigInt();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[3].toBigInt();
  }

  get salt(): BigInt {
    return this[4].toBigInt();
  }

  get oracle(): Address {
    return this[5].toAddress();
  }

  get fees(): Array<BuyToBorrowLockedETHCallSellInputOfferFeesStruct> {
    return this[6].toTupleArray<BuyToBorrowLockedETHCallSellInputOfferFeesStruct>();
  }
}

export class BuyToBorrowLockedETHCallSellInputOfferFeesStruct extends ethereum.Tuple {
  get rate(): i32 {
    return this[0].toI32();
  }

  get recipient(): Address {
    return this[1].toAddress();
  }
}

export class BuyToBorrowLockedETHCallLoanInputStruct extends ethereum.Tuple {
  get offer(): BuyToBorrowLockedETHCallLoanInputOfferStruct {
    return changetype<BuyToBorrowLockedETHCallLoanInputOfferStruct>(
      this[0].toTuple(),
    );
  }

  get signature(): Bytes {
    return this[1].toBytes();
  }
}

export class BuyToBorrowLockedETHCallLoanInputOfferStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get totalAmount(): BigInt {
    return this[2].toBigInt();
  }

  get minAmount(): BigInt {
    return this[3].toBigInt();
  }

  get maxAmount(): BigInt {
    return this[4].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[7].toBigInt();
  }

  get rate(): BigInt {
    return this[8].toBigInt();
  }

  get oracle(): Address {
    return this[9].toAddress();
  }
}

export class BuyToBorrowV2Call extends ethereum.Call {
  get inputs(): BuyToBorrowV2Call__Inputs {
    return new BuyToBorrowV2Call__Inputs(this);
  }

  get outputs(): BuyToBorrowV2Call__Outputs {
    return new BuyToBorrowV2Call__Outputs(this);
  }
}

export class BuyToBorrowV2Call__Inputs {
  _call: BuyToBorrowV2Call;

  constructor(call: BuyToBorrowV2Call) {
    this._call = call;
  }

  get offer(): BuyToBorrowV2CallOfferStruct {
    return changetype<BuyToBorrowV2CallOfferStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get signature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get loanAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get execution(): BuyToBorrowV2CallExecutionStruct {
    return changetype<BuyToBorrowV2CallExecutionStruct>(
      this._call.inputValues[3].value.toTuple(),
    );
  }
}

export class BuyToBorrowV2Call__Outputs {
  _call: BuyToBorrowV2Call;

  constructor(call: BuyToBorrowV2Call) {
    this._call = call;
  }

  get lienId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class BuyToBorrowV2CallOfferStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get totalAmount(): BigInt {
    return this[2].toBigInt();
  }

  get minAmount(): BigInt {
    return this[3].toBigInt();
  }

  get maxAmount(): BigInt {
    return this[4].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[7].toBigInt();
  }

  get rate(): BigInt {
    return this[8].toBigInt();
  }

  get oracle(): Address {
    return this[9].toAddress();
  }
}

export class BuyToBorrowV2CallExecutionStruct extends ethereum.Tuple {
  get order(): BuyToBorrowV2CallExecutionOrderStruct {
    return changetype<BuyToBorrowV2CallExecutionOrderStruct>(this[0].toTuple());
  }

  get listing(): BuyToBorrowV2CallExecutionListingStruct {
    return changetype<BuyToBorrowV2CallExecutionListingStruct>(
      this[1].toTuple(),
    );
  }

  get proof(): Array<Bytes> {
    return this[2].toBytesArray();
  }

  get signature(): Bytes {
    return this[3].toBytes();
  }

  get oracleSignature(): Bytes {
    return this[4].toBytes();
  }
}

export class BuyToBorrowV2CallExecutionOrderStruct extends ethereum.Tuple {
  get trader(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get listingsRoot(): Bytes {
    return this[2].toBytes();
  }

  get numberOfListings(): BigInt {
    return this[3].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[4].toBigInt();
  }

  get assetType(): i32 {
    return this[5].toI32();
  }

  get makerFee(): BuyToBorrowV2CallExecutionOrderMakerFeeStruct {
    return changetype<BuyToBorrowV2CallExecutionOrderMakerFeeStruct>(
      this[6].toTuple(),
    );
  }

  get salt(): BigInt {
    return this[7].toBigInt();
  }
}

export class BuyToBorrowV2CallExecutionOrderMakerFeeStruct extends ethereum.Tuple {
  get recipient(): Address {
    return this[0].toAddress();
  }

  get rate(): i32 {
    return this[1].toI32();
  }
}

export class BuyToBorrowV2CallExecutionListingStruct extends ethereum.Tuple {
  get index(): BigInt {
    return this[0].toBigInt();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }
}

export class BuyToBorrowV2ETHCall extends ethereum.Call {
  get inputs(): BuyToBorrowV2ETHCall__Inputs {
    return new BuyToBorrowV2ETHCall__Inputs(this);
  }

  get outputs(): BuyToBorrowV2ETHCall__Outputs {
    return new BuyToBorrowV2ETHCall__Outputs(this);
  }
}

export class BuyToBorrowV2ETHCall__Inputs {
  _call: BuyToBorrowV2ETHCall;

  constructor(call: BuyToBorrowV2ETHCall) {
    this._call = call;
  }

  get offer(): BuyToBorrowV2ETHCallOfferStruct {
    return changetype<BuyToBorrowV2ETHCallOfferStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get signature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get loanAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get execution(): BuyToBorrowV2ETHCallExecutionStruct {
    return changetype<BuyToBorrowV2ETHCallExecutionStruct>(
      this._call.inputValues[3].value.toTuple(),
    );
  }
}

export class BuyToBorrowV2ETHCall__Outputs {
  _call: BuyToBorrowV2ETHCall;

  constructor(call: BuyToBorrowV2ETHCall) {
    this._call = call;
  }

  get lienId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class BuyToBorrowV2ETHCallOfferStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get totalAmount(): BigInt {
    return this[2].toBigInt();
  }

  get minAmount(): BigInt {
    return this[3].toBigInt();
  }

  get maxAmount(): BigInt {
    return this[4].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[7].toBigInt();
  }

  get rate(): BigInt {
    return this[8].toBigInt();
  }

  get oracle(): Address {
    return this[9].toAddress();
  }
}

export class BuyToBorrowV2ETHCallExecutionStruct extends ethereum.Tuple {
  get order(): BuyToBorrowV2ETHCallExecutionOrderStruct {
    return changetype<BuyToBorrowV2ETHCallExecutionOrderStruct>(
      this[0].toTuple(),
    );
  }

  get listing(): BuyToBorrowV2ETHCallExecutionListingStruct {
    return changetype<BuyToBorrowV2ETHCallExecutionListingStruct>(
      this[1].toTuple(),
    );
  }

  get proof(): Array<Bytes> {
    return this[2].toBytesArray();
  }

  get signature(): Bytes {
    return this[3].toBytes();
  }

  get oracleSignature(): Bytes {
    return this[4].toBytes();
  }
}

export class BuyToBorrowV2ETHCallExecutionOrderStruct extends ethereum.Tuple {
  get trader(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get listingsRoot(): Bytes {
    return this[2].toBytes();
  }

  get numberOfListings(): BigInt {
    return this[3].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[4].toBigInt();
  }

  get assetType(): i32 {
    return this[5].toI32();
  }

  get makerFee(): BuyToBorrowV2ETHCallExecutionOrderMakerFeeStruct {
    return changetype<BuyToBorrowV2ETHCallExecutionOrderMakerFeeStruct>(
      this[6].toTuple(),
    );
  }

  get salt(): BigInt {
    return this[7].toBigInt();
  }
}

export class BuyToBorrowV2ETHCallExecutionOrderMakerFeeStruct extends ethereum.Tuple {
  get recipient(): Address {
    return this[0].toAddress();
  }

  get rate(): i32 {
    return this[1].toI32();
  }
}

export class BuyToBorrowV2ETHCallExecutionListingStruct extends ethereum.Tuple {
  get index(): BigInt {
    return this[0].toBigInt();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }
}

export class CancelOfferCall extends ethereum.Call {
  get inputs(): CancelOfferCall__Inputs {
    return new CancelOfferCall__Inputs(this);
  }

  get outputs(): CancelOfferCall__Outputs {
    return new CancelOfferCall__Outputs(this);
  }
}

export class CancelOfferCall__Inputs {
  _call: CancelOfferCall;

  constructor(call: CancelOfferCall) {
    this._call = call;
  }

  get salt(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelOfferCall__Outputs {
  _call: CancelOfferCall;

  constructor(call: CancelOfferCall) {
    this._call = call;
  }
}

export class CancelOffersCall extends ethereum.Call {
  get inputs(): CancelOffersCall__Inputs {
    return new CancelOffersCall__Inputs(this);
  }

  get outputs(): CancelOffersCall__Outputs {
    return new CancelOffersCall__Outputs(this);
  }
}

export class CancelOffersCall__Inputs {
  _call: CancelOffersCall;

  constructor(call: CancelOffersCall) {
    this._call = call;
  }

  get salts(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class CancelOffersCall__Outputs {
  _call: CancelOffersCall;

  constructor(call: CancelOffersCall) {
    this._call = call;
  }
}

export class IncrementNonceCall extends ethereum.Call {
  get inputs(): IncrementNonceCall__Inputs {
    return new IncrementNonceCall__Inputs(this);
  }

  get outputs(): IncrementNonceCall__Outputs {
    return new IncrementNonceCall__Outputs(this);
  }
}

export class IncrementNonceCall__Inputs {
  _call: IncrementNonceCall;

  constructor(call: IncrementNonceCall) {
    this._call = call;
  }
}

export class IncrementNonceCall__Outputs {
  _call: IncrementNonceCall;

  constructor(call: IncrementNonceCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RefinanceCall extends ethereum.Call {
  get inputs(): RefinanceCall__Inputs {
    return new RefinanceCall__Inputs(this);
  }

  get outputs(): RefinanceCall__Outputs {
    return new RefinanceCall__Outputs(this);
  }
}

export class RefinanceCall__Inputs {
  _call: RefinanceCall;

  constructor(call: RefinanceCall) {
    this._call = call;
  }

  get lien(): RefinanceCallLienStruct {
    return changetype<RefinanceCallLienStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get lienId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get offer(): RefinanceCallOfferStruct {
    return changetype<RefinanceCallOfferStruct>(
      this._call.inputValues[2].value.toTuple(),
    );
  }

  get signature(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class RefinanceCall__Outputs {
  _call: RefinanceCall;

  constructor(call: RefinanceCall) {
    this._call = call;
  }
}

export class RefinanceCallLienStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get borrower(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get rate(): BigInt {
    return this[6].toBigInt();
  }

  get auctionStartBlock(): BigInt {
    return this[7].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[8].toBigInt();
  }
}

export class RefinanceCallOfferStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get totalAmount(): BigInt {
    return this[2].toBigInt();
  }

  get minAmount(): BigInt {
    return this[3].toBigInt();
  }

  get maxAmount(): BigInt {
    return this[4].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[7].toBigInt();
  }

  get rate(): BigInt {
    return this[8].toBigInt();
  }

  get oracle(): Address {
    return this[9].toAddress();
  }
}

export class RefinanceAuctionCall extends ethereum.Call {
  get inputs(): RefinanceAuctionCall__Inputs {
    return new RefinanceAuctionCall__Inputs(this);
  }

  get outputs(): RefinanceAuctionCall__Outputs {
    return new RefinanceAuctionCall__Outputs(this);
  }
}

export class RefinanceAuctionCall__Inputs {
  _call: RefinanceAuctionCall;

  constructor(call: RefinanceAuctionCall) {
    this._call = call;
  }

  get lien(): RefinanceAuctionCallLienStruct {
    return changetype<RefinanceAuctionCallLienStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get lienId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get rate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class RefinanceAuctionCall__Outputs {
  _call: RefinanceAuctionCall;

  constructor(call: RefinanceAuctionCall) {
    this._call = call;
  }
}

export class RefinanceAuctionCallLienStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get borrower(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get rate(): BigInt {
    return this[6].toBigInt();
  }

  get auctionStartBlock(): BigInt {
    return this[7].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[8].toBigInt();
  }
}

export class RefinanceAuctionByOtherCall extends ethereum.Call {
  get inputs(): RefinanceAuctionByOtherCall__Inputs {
    return new RefinanceAuctionByOtherCall__Inputs(this);
  }

  get outputs(): RefinanceAuctionByOtherCall__Outputs {
    return new RefinanceAuctionByOtherCall__Outputs(this);
  }
}

export class RefinanceAuctionByOtherCall__Inputs {
  _call: RefinanceAuctionByOtherCall;

  constructor(call: RefinanceAuctionByOtherCall) {
    this._call = call;
  }

  get lien(): RefinanceAuctionByOtherCallLienStruct {
    return changetype<RefinanceAuctionByOtherCallLienStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get lienId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get offer(): RefinanceAuctionByOtherCallOfferStruct {
    return changetype<RefinanceAuctionByOtherCallOfferStruct>(
      this._call.inputValues[2].value.toTuple(),
    );
  }

  get signature(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class RefinanceAuctionByOtherCall__Outputs {
  _call: RefinanceAuctionByOtherCall;

  constructor(call: RefinanceAuctionByOtherCall) {
    this._call = call;
  }
}

export class RefinanceAuctionByOtherCallLienStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get borrower(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get rate(): BigInt {
    return this[6].toBigInt();
  }

  get auctionStartBlock(): BigInt {
    return this[7].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[8].toBigInt();
  }
}

export class RefinanceAuctionByOtherCallOfferStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get totalAmount(): BigInt {
    return this[2].toBigInt();
  }

  get minAmount(): BigInt {
    return this[3].toBigInt();
  }

  get maxAmount(): BigInt {
    return this[4].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[7].toBigInt();
  }

  get rate(): BigInt {
    return this[8].toBigInt();
  }

  get oracle(): Address {
    return this[9].toAddress();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RepayCall extends ethereum.Call {
  get inputs(): RepayCall__Inputs {
    return new RepayCall__Inputs(this);
  }

  get outputs(): RepayCall__Outputs {
    return new RepayCall__Outputs(this);
  }
}

export class RepayCall__Inputs {
  _call: RepayCall;

  constructor(call: RepayCall) {
    this._call = call;
  }

  get lien(): RepayCallLienStruct {
    return changetype<RepayCallLienStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get lienId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RepayCall__Outputs {
  _call: RepayCall;

  constructor(call: RepayCall) {
    this._call = call;
  }
}

export class RepayCallLienStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get borrower(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get rate(): BigInt {
    return this[6].toBigInt();
  }

  get auctionStartBlock(): BigInt {
    return this[7].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[8].toBigInt();
  }
}

export class SeizeCall extends ethereum.Call {
  get inputs(): SeizeCall__Inputs {
    return new SeizeCall__Inputs(this);
  }

  get outputs(): SeizeCall__Outputs {
    return new SeizeCall__Outputs(this);
  }
}

export class SeizeCall__Inputs {
  _call: SeizeCall;

  constructor(call: SeizeCall) {
    this._call = call;
  }

  get lienPointers(): Array<SeizeCallLienPointersStruct> {
    return this._call.inputValues[0].value.toTupleArray<SeizeCallLienPointersStruct>();
  }
}

export class SeizeCall__Outputs {
  _call: SeizeCall;

  constructor(call: SeizeCall) {
    this._call = call;
  }
}

export class SeizeCallLienPointersStruct extends ethereum.Tuple {
  get lien(): SeizeCallLienPointersLienStruct {
    return changetype<SeizeCallLienPointersLienStruct>(this[0].toTuple());
  }

  get lienId(): BigInt {
    return this[1].toBigInt();
  }
}

export class SeizeCallLienPointersLienStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get borrower(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get rate(): BigInt {
    return this[6].toBigInt();
  }

  get auctionStartBlock(): BigInt {
    return this[7].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[8].toBigInt();
  }
}

export class SetBlockRangeCall extends ethereum.Call {
  get inputs(): SetBlockRangeCall__Inputs {
    return new SetBlockRangeCall__Inputs(this);
  }

  get outputs(): SetBlockRangeCall__Outputs {
    return new SetBlockRangeCall__Outputs(this);
  }
}

export class SetBlockRangeCall__Inputs {
  _call: SetBlockRangeCall;

  constructor(call: SetBlockRangeCall) {
    this._call = call;
  }

  get _blockRange(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBlockRangeCall__Outputs {
  _call: SetBlockRangeCall;

  constructor(call: SetBlockRangeCall) {
    this._call = call;
  }
}

export class SetOracleCall extends ethereum.Call {
  get inputs(): SetOracleCall__Inputs {
    return new SetOracleCall__Inputs(this);
  }

  get outputs(): SetOracleCall__Outputs {
    return new SetOracleCall__Outputs(this);
  }
}

export class SetOracleCall__Inputs {
  _call: SetOracleCall;

  constructor(call: SetOracleCall) {
    this._call = call;
  }

  get oracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetOracleCall__Outputs {
  _call: SetOracleCall;

  constructor(call: SetOracleCall) {
    this._call = call;
  }
}

export class StartAuctionCall extends ethereum.Call {
  get inputs(): StartAuctionCall__Inputs {
    return new StartAuctionCall__Inputs(this);
  }

  get outputs(): StartAuctionCall__Outputs {
    return new StartAuctionCall__Outputs(this);
  }
}

export class StartAuctionCall__Inputs {
  _call: StartAuctionCall;

  constructor(call: StartAuctionCall) {
    this._call = call;
  }

  get lien(): StartAuctionCallLienStruct {
    return changetype<StartAuctionCallLienStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get lienId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class StartAuctionCall__Outputs {
  _call: StartAuctionCall;

  constructor(call: StartAuctionCall) {
    this._call = call;
  }
}

export class StartAuctionCallLienStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get borrower(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get rate(): BigInt {
    return this[6].toBigInt();
  }

  get auctionStartBlock(): BigInt {
    return this[7].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[8].toBigInt();
  }
}

export class TakeBidCall extends ethereum.Call {
  get inputs(): TakeBidCall__Inputs {
    return new TakeBidCall__Inputs(this);
  }

  get outputs(): TakeBidCall__Outputs {
    return new TakeBidCall__Outputs(this);
  }
}

export class TakeBidCall__Inputs {
  _call: TakeBidCall;

  constructor(call: TakeBidCall) {
    this._call = call;
  }

  get lien(): TakeBidCallLienStruct {
    return changetype<TakeBidCallLienStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get lienId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get execution(): TakeBidCallExecutionStruct {
    return changetype<TakeBidCallExecutionStruct>(
      this._call.inputValues[2].value.toTuple(),
    );
  }
}

export class TakeBidCall__Outputs {
  _call: TakeBidCall;

  constructor(call: TakeBidCall) {
    this._call = call;
  }
}

export class TakeBidCallLienStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get borrower(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get rate(): BigInt {
    return this[6].toBigInt();
  }

  get auctionStartBlock(): BigInt {
    return this[7].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[8].toBigInt();
  }
}

export class TakeBidCallExecutionStruct extends ethereum.Tuple {
  get makerOrder(): TakeBidCallExecutionMakerOrderStruct {
    return changetype<TakeBidCallExecutionMakerOrderStruct>(this[0].toTuple());
  }

  get extraSignature(): Bytes {
    return this[1].toBytes();
  }

  get blockNumber(): BigInt {
    return this[2].toBigInt();
  }
}

export class TakeBidCallExecutionMakerOrderStruct extends ethereum.Tuple {
  get order(): TakeBidCallExecutionMakerOrderOrderStruct {
    return changetype<TakeBidCallExecutionMakerOrderOrderStruct>(
      this[0].toTuple(),
    );
  }

  get v(): i32 {
    return this[1].toI32();
  }

  get r(): Bytes {
    return this[2].toBytes();
  }

  get s(): Bytes {
    return this[3].toBytes();
  }

  get extraSignature(): Bytes {
    return this[4].toBytes();
  }

  get signatureVersion(): i32 {
    return this[5].toI32();
  }

  get blockNumber(): BigInt {
    return this[6].toBigInt();
  }
}

export class TakeBidCallExecutionMakerOrderOrderStruct extends ethereum.Tuple {
  get trader(): Address {
    return this[0].toAddress();
  }

  get side(): i32 {
    return this[1].toI32();
  }

  get matchingPolicy(): Address {
    return this[2].toAddress();
  }

  get collection(): Address {
    return this[3].toAddress();
  }

  get tokenId(): BigInt {
    return this[4].toBigInt();
  }

  get amount(): BigInt {
    return this[5].toBigInt();
  }

  get paymentToken(): Address {
    return this[6].toAddress();
  }

  get price(): BigInt {
    return this[7].toBigInt();
  }

  get listingTime(): BigInt {
    return this[8].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[9].toBigInt();
  }

  get fees(): Array<TakeBidCallExecutionMakerOrderOrderFeesStruct> {
    return this[10].toTupleArray<TakeBidCallExecutionMakerOrderOrderFeesStruct>();
  }

  get salt(): BigInt {
    return this[11].toBigInt();
  }

  get extraParams(): Bytes {
    return this[12].toBytes();
  }
}

export class TakeBidCallExecutionMakerOrderOrderFeesStruct extends ethereum.Tuple {
  get rate(): i32 {
    return this[0].toI32();
  }

  get recipient(): Address {
    return this[1].toAddress();
  }
}

export class TakeBidV2Call extends ethereum.Call {
  get inputs(): TakeBidV2Call__Inputs {
    return new TakeBidV2Call__Inputs(this);
  }

  get outputs(): TakeBidV2Call__Outputs {
    return new TakeBidV2Call__Outputs(this);
  }
}

export class TakeBidV2Call__Inputs {
  _call: TakeBidV2Call;

  constructor(call: TakeBidV2Call) {
    this._call = call;
  }

  get lien(): TakeBidV2CallLienStruct {
    return changetype<TakeBidV2CallLienStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get lienId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get execution(): TakeBidV2CallExecutionStruct {
    return changetype<TakeBidV2CallExecutionStruct>(
      this._call.inputValues[2].value.toTuple(),
    );
  }
}

export class TakeBidV2Call__Outputs {
  _call: TakeBidV2Call;

  constructor(call: TakeBidV2Call) {
    this._call = call;
  }
}

export class TakeBidV2CallLienStruct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get borrower(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get rate(): BigInt {
    return this[6].toBigInt();
  }

  get auctionStartBlock(): BigInt {
    return this[7].toBigInt();
  }

  get auctionDuration(): BigInt {
    return this[8].toBigInt();
  }
}

export class TakeBidV2CallExecutionStruct extends ethereum.Tuple {
  get order(): TakeBidV2CallExecutionOrderStruct {
    return changetype<TakeBidV2CallExecutionOrderStruct>(this[0].toTuple());
  }

  get listing(): TakeBidV2CallExecutionListingStruct {
    return changetype<TakeBidV2CallExecutionListingStruct>(this[1].toTuple());
  }

  get proof(): Array<Bytes> {
    return this[2].toBytesArray();
  }

  get signature(): Bytes {
    return this[3].toBytes();
  }

  get oracleSignature(): Bytes {
    return this[4].toBytes();
  }
}

export class TakeBidV2CallExecutionOrderStruct extends ethereum.Tuple {
  get trader(): Address {
    return this[0].toAddress();
  }

  get collection(): Address {
    return this[1].toAddress();
  }

  get listingsRoot(): Bytes {
    return this[2].toBytes();
  }

  get numberOfListings(): BigInt {
    return this[3].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[4].toBigInt();
  }

  get assetType(): i32 {
    return this[5].toI32();
  }

  get makerFee(): TakeBidV2CallExecutionOrderMakerFeeStruct {
    return changetype<TakeBidV2CallExecutionOrderMakerFeeStruct>(
      this[6].toTuple(),
    );
  }

  get salt(): BigInt {
    return this[7].toBigInt();
  }
}

export class TakeBidV2CallExecutionOrderMakerFeeStruct extends ethereum.Tuple {
  get recipient(): Address {
    return this[0].toAddress();
  }

  get rate(): i32 {
    return this[1].toI32();
  }
}

export class TakeBidV2CallExecutionListingStruct extends ethereum.Tuple {
  get index(): BigInt {
    return this[0].toBigInt();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
